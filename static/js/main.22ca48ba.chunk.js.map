{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","position","setPosition","className","style","width","transform","transitionDuration","map","item","src","alt","type","onClick","moveon","length","App","state","changeValue","event","targetName","target","name","value","setState","this","method","min","max","defaultValue","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22ca48ba.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [position, setPosition] = useState(0);\n  const getNext = () => {\n    let moveon: number = position + itemWidth * step;\n\n    if (position + step * itemWidth >= images.length * itemWidth - itemWidth) {\n      moveon = images.length * itemWidth - frameSize * itemWidth;\n    }\n\n    if (position + frameSize * itemWidth >= images.length * itemWidth\n       - itemWidth) {\n      moveon = position + itemWidth;\n    }\n\n    if (position + frameSize * itemWidth >= images.length * itemWidth) {\n      moveon = position;\n    }\n\n    if (infinite) {\n      moveon = itemWidth * images.length - step * itemWidth;\n      if (position === moveon) {\n        moveon = 0;\n      }\n    }\n\n    setPosition(() => moveon);\n  };\n\n  const getPrev = () => {\n    let moveon: number = position - itemWidth * step;\n\n    if (position - itemWidth * step < 0) {\n      moveon = 0;\n    }\n\n    if (infinite) {\n      moveon = 0;\n      if (position === 0) {\n        moveon = itemWidth * images.length - step * itemWidth;\n      }\n    }\n\n    setPosition(() => moveon);\n  };\n\n  return (\n    <>\n      <div className=\"Carousel\" style={{ width: itemWidth * frameSize }}>\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${-position}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map(item => (\n            <li key={item}>\n              <img\n                src={`${item}`}\n                alt={item}\n                style={{ width: itemWidth }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__boxbuttons\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={getPrev}\n          >\n            Prev\n          </button>\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={getNext}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { Event } from './react-app-env';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeValue = (event: Event): void => {\n    const targetName = event.target.name;\n    const { value } = event.target;\n\n    switch (targetName) {\n      case 'itemWidth':\n        this.setState({ itemWidth: +value });\n        break;\n      case 'animationDuration':\n        this.setState({ animationDuration: +value });\n        break;\n      case 'frameSize':\n        this.setState({ frameSize: +value });\n        break;\n      case 'step':\n        this.setState({ step: +value });\n        break;\n      case 'infinite':\n        this.setState((state) => ({ infinite: !state.infinite }));\n        break;\n      default:\n    }\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\" >Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n          step={this.state.step}\n          infinite={this.state.infinite}\n        />\n\n        <div className=\"App__boxform\">\n          <form method=\"get\" className=\"App__form\">\n            <span className=\"App__spanform\">Item Width:</span>\n            <input\n              className=\"App__inputform\"\n              name=\"itemWidth\"\n              type=\"number\"\n              min={100}\n              max={200}\n              defaultValue={this.state.itemWidth}\n              onChange={this.changeValue}\n            />\n\n            <span className=\"App__spanform\">Frame Size:</span>\n            <input\n              className=\"App__inputform\"\n              name=\"frameSize\"\n              type=\"number\"\n              min={3}\n              max={5}\n              defaultValue={this.state.frameSize}\n              onChange={this.changeValue}\n            />\n\n            <span className=\"App__spanform\">Step:</span>\n            <input\n              className=\"App__inputform\"\n              name=\"step\"\n              type=\"number\"\n              min={2}\n              max={5}\n              defaultValue={this.state.step}\n              onChange={this.changeValue}\n            />\n\n            <span className=\"App__spanform\">Animation Duration ms:</span>\n            <input\n              className=\"App__inputform\"\n              name=\"animationDuration\"\n              type=\"number\"\n              min={1000}\n              max={5000}\n              defaultValue={this.state.animationDuration}\n              onChange={this.changeValue}\n            />\n\n            <span className=\"App__spanform\">Infinity Animation</span>\n            <input\n              className=\"App__checkboxform\"\n              name=\"infinite\"\n              type=\"checkbox\"\n              onChange={this.changeValue}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}